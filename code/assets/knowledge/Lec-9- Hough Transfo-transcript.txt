SPEAKER 0
Hi, Ira. Welcome to Introduction to Image Processing. Today's lecture, we're going to cover on how transform in frequency to mean. Let's begin. In today's lecture, we're going to identify how to find lines that have transformed other parameter spaces. What is frequency domain and the frequency domain processing? Let's begin with finding lines. From the many images that we use in image processing. One thing all of us can agree on is all of the images have lights. Now the question is why lines? Not as a geometric primitive make important weekend task easier, especially for matching and classifying images. Now some geometric objects are invariant and a projection from a 3D world to a 2D image. Straight lines in the world create straight lines on the image. A straight line in the image is evident for a straight line in the wolf. However, there's a problem to this. Not suppose tree lights aren't important. AC section provides a set points. As we all have learned in the previous life, which are likely to lie on those lines. But how many lines are there and what are the parameters? One solution is to take a straight line and make it to all possible image, position and orientation. Compute a measure of fit to the data. Example Count how many edges under each possible line. Now this presents an obstacle. It's incredibly expensive to do so. So how can we solve this? Classic template matching takes a line like Heat on the Image Death and asks the following questions. Does it fit back here or here? How about that? How about here? How about here? Now the half takes each yet the item h and ask one question. What line could pass through this? Now let's explore the alternative solution called the heart transplant. No time to walk down memory lane once again. So recalling what we have learned in our high school. All of us can agree upon an extended line of creation. Four of a line is the following. The famous Y equals M explicit. No, we know that the line parameters M and C, we can vary X, compute Y and draw the line. This line represents this a set of x and Y pass that satisfy the that equation. But we don't know the line, Prometheus. We just have some data points. No. But if a data point lies on a line, then that line's parameters M and C must satisfy the following equation. So we can represent all possible lives. True exiled, white eyed by the set of AMC pairs that satisfies this equation. Now let's rearrange the equation, which would give us the following. This also describes a straight line, but as X, Y, and y, I know one and M and C are unknown. That line is in empty space, which is known as a parameter space. Now all of us are very familiar with the diagram on the left, which is the X and Y space for the diagram on the right, which we now know as pyramid the space. We can we can deduce the following. This trick lining M in C space represents all the values of M and see that satisfy the equation here. And so the parameters, all the lines that could pos true x i in y on. Suppose they have two Aegis, you know, image known as x, one, y one and x2 y two and is represented to our parameter space. They will each generate a lining and C space representing the set of lines that could pass through them. The intersection of our two lanes is the intersection of two sets of lane perimeters. The graph here supports the sentence above. We can also see the point of intersection therefore gives the parameters of a line to both x, one, y one and x2y to. Now let's take this one step further. All pixels which lie on a line is x, y space, are represented by lines which all pass through a single point in M.C. Space. The point to which they all pass gives the values of and complement and C complement in the equation of the line Q. Therefore, to detect lines, all we need to do is transform each each point into empty space and look for places where lots of lines intersect. Now this is what have transformed the. So let's break down the processes of half transform. Step one Quantised M.C. Space into two dimensional three E for appropriate steps of an in C step to initialise all elements of E and C to zero. Step three for each pixel, which lies on some h in the image, we add one to all elements of E and C whose indices M and C satisfy the following equation. Step for. Search for elements of EMC, which have large value. Each one found will correspond to a line in the original image. Now let's use this graphical example to aid with our understanding. We know that this diagram here represents the x, y space, whereas the diagram on the right here represents the empty space. Now we have populated the empty space in accordance to the four steps that we covered in the previous slide. Now there is only one line. We satisfy this equation. So by looking at the empty space, we can see that because of the large value here. Three. Each. One found component to a line is in the original image. Now this slide shows more real examples. So you have an image. You have Aegis. You have. Accumulators. And by using all this in sequence, this is the result you get. We can show an image. We can conclude in the hob transform only supplies the Prometheus of lines it detects. No, this can be an advantage or disadvantage. Let's look at other parameters basis to help with our understanding. Let's revisit the straight line again. Now another equation for a straight line is as follows. So for an end by any means. This is how we are presented in accordance to the equation above. We know that each x i y i generate a c set in the following space. Now let's try to put into perspective way of letting the previous slide in an example. The following shape here is represented in the following frequency. No. Even though it does give a very nice representation of the light to the object as shown in these two diagrams here, a key question arise What happens to peaks in parameter space when noise or pollution is introduced? The half transform can be implemented in many, like many implementation. MATLAB allows you to specify which parameter off the parameter space you're interested in. For more details of its implementation, you can visit this website and view its suggested coding. Now let's look at what happens for circles. Now we know that parametric equation for circle is the following. And the food problem is causing air space and the not are so goes in e space. So the question now is if it's ellipses, how does the how principles work? The how can in principle be applied to any parameterised curve? Though it's not always practical. Now, here's when after that beaver position comes in and we call this the frequency be. So let's revisit the idea for an image transform. We know that image will start off with an input image. You will proceed to mathematical transformation. You would transform the image in a certain way. Process that unique inverse the transformation and produce the output image which still is in spatial domain. Now one of the famous transponders in frequency domain is known as the Fourier transform. Now there are many different transformation by the Fury transform or its FOS implementation is the best known. Now, in this module, we will treat the 50 as a black box and we will not considered underlining mathematics in detail. Our focus will be on the key idea, the frequency spatial presentation and how it can be. Any given function. An image is a duty. Function, of course, can be approximated by a weight that some of the bases function, of course, using signs and cosines. Now this slide introduces everyone to the full transcript. Now, the basic idea was introduced way back in 18 zero seven. Now, these are four functions, okay? These are both function here. Can you be combined to just this one? Now let's explore how we can combine four different functions into one. They're supposed to be just use cosine, keep the weight at by indicates the important. Of course, you. Now you. I represent the frequency of the consign signal. Take note. A larger you are means cosine you it changes faster and therefore higher frequency component of t whereas a smaller you I means cost you. It changes slower therefore indicating a lower frequency component and. Now, when you apply that formula into signals that we have, this is what we get. He. Now when we change the parameters, as you can see here to the original equation, it will. Affect the way the signal is distributed. Again, the more we make changes to the parameters, the more it affects the frequency. Now let's put this all into one slide for easier reference. These are the parameters that we have used. You can see that we are changing things with regards to the F1 F2 in every respect. If you look at what happens to the frequency. And look at what happens to the histogram below it. No less simplify the informal rules. So we know that this diagram here represents the input signal of naming. The bases function actually side and cosines in this diagram here represent the power spectrum or the frequency you using. Now let's look at amplitude versus phase. So to accurately represent a signal, image base's function need to be shifted or rotated. Here's where amplitude and phase comes in. So amplitude related prominence of the base is function, whereas space refers to the relative displacement of the bases function. Now image processing focuses on the power spectrum. Which is the amplitude. Now let's look at the power spectrum in 2D. So the principle is the same, but the bases functions are oriented. Distance from centre reflects frequency of corresponding bases function. Direction from centre reflects orientation of corresponding bases function. Now Origin records lowest frequency possible. So it's normally flat proportional to the mean density. Now, let's put this into perspective by using an e-mail. So two responses because basis function even. So you have two images. You have a look at the power spectra. And have a look at where the origin is. It's at the centre. So in a frequency domain, this is the image that we have. And when we change it to the respective spectrum, this is the output that we get. The translation does not change. Spectrum. However, rotation this is this is very clear in the diagram on the right here. Now let's look into frequency domain processing.

UNKNOWN
For better understanding.

SPEAKER 0
So revisiting the image Transform diagram you presented in the earlier slide. Our focus is going to be on here. Now. Smoothing, sharpening and bending emitting is one thing that we normally would use to apply to any frequency domain processing. Now let's have a look at what it means. Smoothing refers to low pass filtering, which refers to actually higher frequency components, whereas sharpening refers to in high pass filtering. It's for low frequency components and band limiting. To set all components to zero outside a given frequency rate. Now let's use this simple example to even our understanding. Now set the origin of the power spectrum to zero. Leave the rest and change. Now, this reduces the average intensity of the image to zero, and negative intensity have been set to zero in the display. So this is what we will get. No, we're calling back. The term convolution. So in spatial domain processing is achieved via convolution. The convolution theorem underpins frequency domain processing. Take note of this coalition in spatial domain becomes multiplication in frequency domain. Interesting, isn't it? Now let's perform. Filtering in frequency domain. Of course, filtering here refers to multiplying power spectrum by a mass designed to change the weights of selected bases function. The first one refers to the low possible three, whereas the second one refers to the high pass featuring. Take note of the resulting output image from the two different filtering approaches. No, an ideologue boss filtering is as follows. It allows users to specify precisely which frequencies are to be kept in which to be removed. Good. If you know which which city, that's not the case. Not to eat without anaesthetic. Let's use an example in this way. So we have a sample image and it's period spectrum. Now the circles Ma, I will cut off at D zero. So we have different what you call cut off periods five, 15, 30, 80 and 230. Now this presents an unintended consequences. So for the previous, like we know that ideal or partial dream. Looking at this diagram here on the right hand side is our guide top left to bottom right. We have d0s5, 15, 38 and 220. Now note the ringing artefact caused by hot boundary between frequencies k and removed. Frequency of ringing affects increases with deal. So the higher your dog go it will cause the frequency of ringing. Often the missing component needed to make the uniform regions uniform become higher frequency.

UNKNOWN
As deal increases.

SPEAKER 0
So how do we solve it? Perhaps introducing a low pass Gaussian filter. Let's have a look in more detail. So a law passed Gaussian filtering with cut off frequencies at the following. If you compare the results in this slide with the one previously, you can see that it does help the output significantly. Based on our understanding on the low pass filters, Let's apply that to our high possibilities as well. This is the ideal representation. But as we can see, it could produce unintended consequences. So Gaussian presents a better alternative as well. Now, in this light, we show examples of high pass Gaussian filters now using the same sample image for better with any Gaussian high pass filter with different view. The first image here is 30, followed by 60 and 160. So rawhide packs filled the set origin and so mean intensity to zero making images dark. Add a small constant to the filter so the mean remains positive. Now have a look at these two example to eat with our understanding of this sentence here in the image on the left goes in high pass field, that same image. Whereas the image on the right is Gaussian hide box filter lies a constant. In summary, in today's lecture, we have learned on how to find lines. We were introduced to the half transform and other parameter spaces. We also got to know what frequency domain is and the frequency domain processing. As always, if you have questions, you know where to find. With that brings us to the end of today's lecture. Next week, we will look into image compression. So then take care. Rewind, Stacy, and I'll see you guys. Jess.
